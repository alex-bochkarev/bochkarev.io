#+hugo_base_dir: ~/projects/bochkarev.io

# hugo_section is a folder inside 'content'
#+hugo_section: tools
#+hugo_auto_set_lastmod: t
#+hugo_front_matter_format: yaml

#+title: üì∞ Working with the literature: tools and approaches

#+date: 2021-01-15

#+hugo_tags: tech-seminar
#+hugo_categories: tools
#+hugo_draft: t

#+begin_src yaml :front_matter_extra t
summary: "A collection of notes on literature: discovery, reading, keeping track of references, and using them in writing."
#+end_src

* Introduction
  I would like to discuss the /problem/, i.e. requirements to an IT system
  supporting my basic workflow, and then the /solution/ that worked for me. It
  may or may not work for /you/ of course, but hopefully will provide some
  inputs to design your own IT "ecosystem". Here is a very general (and
  therefore, useless by itself) description of the relevant workflow:
  
#+NAME: dia_process
#+begin_src plantuml :file ./literature.png
@startuml
cloud Literature
collections papers [
Selected
papers
]

folder PIM {
        database DB [
        References
        storage
        ]

        file note [
        Notes ]
}

file doc [
Manuscript
]
skinparam SequenceMessageAlign first

Literature --> papers: (1) Discover
papers --> DB: (2) Store
papers --> note: (3) Read
DB --> doc: (4) Reference
note --> doc : (5) Use
@enduml
#+end_src

#+RESULTS: dia_process
[[file:./literature.png]]

This is a large topic, but roughly speaking the system[fn:PIM] has two
key components that manage:
- references (like, bibliography data, such as =.bib= entries, plain text
  authors-titles-year-etc, perhaps, along with PDF files);
- notes (that reflect your thinking process related to this paper/piece of information).

It can be organized in *many* ways (including some good old paper-based versions
that were [[https://pub.uni-bielefeld.de/download/2942475/2942530/jschmidt_2016_niklas%20luhmanns%20card%20index.pdf][reported]] to be... very productive, to say the least[fn:hum]; a little
more on this below). I had the following specific *requirements* in mind:
- The system must be *future-proof*. Research is (hopefully) a long-term
  endeavor, so lock-in with proprietary technologies is not acceptable. I must
  be able to move to an alternative solution, if I'd like to. Key data must be
  stored in some formats that allow for recovery with very basic tools (at least
  in theory): plain text is best, open standards and free software are my
  friends. Oh yes, and I don't want to store my data in cloud all the time, I
  love tools that work offline.
- It must let me to do the following things:
  + *capture* a paper from a browser easily (or any other /source/ -- maybe a
    web page, a book, etc.), retrieving bibliographical info automatically when
    possible (including metadata extraction from PDFs).
  + *manage* references efficiently (edit fields, etc.), categorize things, etc.
  + play well with *LaTeX* (mostly, looking for and inserting citations).
- (something that I hope you will ignore:) a large benefit for me had anything
  that worked well within [[https://xkcd.com/378/][Emacs]].

  
  The core component of such system is, of course, a /bibliography-/,
  /citation-/, or /reference-manager/.
  
* On references and bibliography
  A [[https://en.wikipedia.org/wiki/Reference_management_software][reference-management]] software is a tool that lets you to (surprise!) manage
  references, i.e., bibliographical data: author, title, publisher data, etc.
  That is, it captures and stores the bibliographical /data/ in some internal
  format (e.g., a =.bib= file, an [[https://sqlite.org][SQLite]] database, etc.), and then can format it
  as you'd like: using the chosen [[https://en.wikipedia.org/wiki/Citation#Styles][citation style]] and producing outputs in plain
  text, word processor document, etc. It also usually helps to generate
  bibliographies automatically, so that it updates when you update the text.

  There are several key programs/services out there, and an infinite variety of
  their comparative analyses:
  - Wikipedia has pretty large [[https://en.wikipedia.org/wiki/Comparison_of_reference_management_software][comparison summary tables]]. It might be a good
    place to start, but the number of options is overwhelming.
  - Another detailed comparison was made in [[https://mediatum.ub.tum.de/doc/1320978/1320978.pdf][Technische Universit√§t M√ºnchen]]. 
  - University libraries usually have brief overviews of the software they
    recommend: e.g., a nice one from [[https://ucsd.libguides.com/howtocite/compare][UCSD]], [[https://guides.library.upenn.edu/citationmgmt][U. of Pennsylvania]]. Also:
    [[https://libguides.mit.edu/cite-write][MiT]] (specifically on [[https://libguides.mit.edu/cite-write/citetools][citation management]]), [[https://guides.library.harvard.edu/cite][Harvard]], [[https://library.stanford.edu/research/bibliography-management][Stanford]], [[https://guides.lib.uw.edu/research/citations/citation-tools][U. of
    Washington]],
  - There are numerous Reddit discussions (such as: [[https://www.reddit.com/r/LaTeX/comments/iouswl/jabref_vs_zotero_vs_orgref_which_one_do_you/][JabRef vs Zotero vs org-ref]])
  - Of course, there is a paper[fn:recursive] on that: cite:ivey2018. 
    

  My personal short list would overlap with the Clemson Library's [[https://libraries.clemson.edu/research/citation-management/][one]]
  (at the time of writing this): [[https://www.zotero.org/][Zotero]], [[https://www.jabref.org/][JabRef]]; plus [[https://mendeley.com/][Mendeley]], [[https://refworks.proquest.com/researcher/][Refworks]]
  (Clemson [[https://clemson.libguides.com/newrefworks][guide]]), [[https://endnote.com/][EndNote]] if I allow for commercial products (I have also read
  some good things about [[https://www.papersapp.com/][Papers]] for Mac -- but never had a chance to look
  myself). This list is not exhaustive (by far), so please refer to more
  complete resources (including the ones mentioned above) if you'd need. Despite
  the problem seems somewhat standard from the first sight, it seems that
  different people demand different things, so there is no "universal" solution.
  Instead of trying to discuss pros and cons, let me just try to sketch what
  works for me.

* My Zotero-based system.
Here is my system in a nutshell, from a technology perspective:  
#+NAME: dia_system
#+begin_src plantuml :file ./system.svg
@startuml
folder Docs as "Incoming docs" {
  cloud web as "Web pages"
  file PDF as "PDF files"
}

folder Zotero as "Zotero system" {
        database DB as "SQLite database"
        folder PDFs as "PDF storage (folder)"
        node ffplug as "Firefox plugin"
        node LOplug as "LibreOffice/MS Word plugin"
}

file bib as "Bibtex file (.bib)"

folder docs as "Manuscript" {
        file latex_doc as "Latex document"
        file g_doc as "Google doc"
        file LO_doc as "LibreOffice / MS Word doc"
}

folder dropbox as "Dropbox folder (tablet)" {
        file PDF_copy as "PDF (copy)"
}

DB <--> PDFs
PDF --> PDFs
PDFs <--> PDF_copy
PDF --> ffplug
web <--> ffplug
ffplug <--> DB

DB --> bib
bib --> latex_doc
ffplug --> g_doc
DB --> LOplug
LOplug --> LO_doc

note top of bib: Auto-export on every change.
note bottom of dropbox: Send/retrieve files (with annotations) upon request.
note bottom of latex_doc: Edit using my favorite editor (supporting many cool things)
@enduml
#+end_src

#+RESULTS: dia_system
[[file:./system.svg]]

So, basically, I use the following tools:
- Zotero desktop app
- Firefox plugin ([[https://www.zotero.org/download/connectors]["Connector"]]) to fetch info from the web
- Zotero addons (there is a larger [[https://www.zotero.org/support/plugins][list]] of these):
  + BetterBibTex to make the =.bib= related magic happen;
  + LibreOffice integration (think MS Word);
  + ZotFile to be able to manipulate PDFs easily, including sending them to the tablet.

Now, the "manuscript" part can be implemented, again in several ways, and the
purpose here is to supercharge your editor to get info from the =.bib= file. My
[[https://www.spacemacs.org/][Emacs (Spacemacs)]] handles this for me:[fn:layers]

I have a convenient (fuzzy) search / auto-completion when I insert the keys:

  [[./ts-literature/org_insert_citation.gif]]

And also I can easily pull out a PDF or my notes when I need to:

[[./ts-literature/org_open_pdf_notes.gif]]

For these rare cases when I use MS Word-like environments, there are
LibreOffice and Google Docs integration:

[[./ts-literature/gdoc_insert_citation.gif]]

(It is also worth noting that you can just find a paper in Zotero and copy a
citation in the necessary citation style, e.g., as a plain text -- to insert it
anywhere.)

If you find it interesting -- there are many demos and tutorials on Zotero on
YouTube and other places (most probably, including a dedicated training in your
university library).

* A word on LaTeX ecosystem.

  
** LaTeX ecosystem
   - https://tex.stackexchange.com/questions/25701/bibtex-vs-biber-and-biblatex-vs-natbib


* A note on notes.
  This is, actually, a separate topic. But if you feel the necessity to take
  notes on your research in general (like an extended lab journal), there are
  many options.

  Basically, we are talking about a collection of interlinked notes. There are
  several relevant "keywords" out there that I would like to mention.
  - First, one might take a technological perspective and look for software that
    allows to manage notes. This is, of course, good old Evernote[fn:evernote],
    a newer and open source[fn:MIT] [[https://joplinapp.org/][Joplin]].
  - There is and a vast variety of [[https://en.wikipedia.org/wiki/List_of_wiki_software][wiki software]] (such as [[https://www.dokuwiki.org/dokuwiki][DokuWiki]] or [[https://www.mediawiki.org/wiki/MediaWiki][MediaWiki]],
    just to name a couple. But the list is huge.) Some of them are specifically
    positioned as a [[https://en.wikipedia.org/wiki/Personal_wiki][Personal Wiki]] (e.g., such as [[https://tiddlywiki.com/][TiddlyWiki]] -- see a nice 2.5
    minutes [[https://tiddlywiki.com/#Introduction%20Video][intro video]]).
  - There are specific solutions for working with an interconnected grid of
    "evergreen" notes (i.e., the ones you might edit every time when you visit
    them.) I would like to mention:
    + [[https://roamresearch.com/][Roam]]. It looks totally exciting, but web-based (which
      is a big no-go for me);
    + [[https://obsidian.md/][Obsidian]]. Comparable thing, uses local storage, as far as I can tell.
      Ironically, I am not sure how good is it with citations/references üòÄ.
      Never used it at all, but to me, it looks *very* promising (especially if
      it indeed keeps your information in [[https://en.wikipedia.org/wiki/Markdown][markdown]], which is essentially plain
      text, so you can open it in future no matter what).
    + [[https://www.orgroam.com/][Org-roam]]. This is a part of [[https://www.gnu.org/software/emacs/][Emacs]] ecosystem over the all-mighty[fn:org]
      [[https://orgmode.org/][orgmode]]. Free and open source, local solution. This is what I use
      currently.
  - Then, there is a story about Zettelkasten.

* Discovering the literature
  - Feeds: RSS, atom
  - Mailing lists
  - Journal/reading club

* Concluding remarks and further reading
  - We have Clemson Libraries [[https://clemson.libcal.com/calendar/training?cid=3593&t=d&d=0000-00-00&cal=3593&inc=0][trainings/events]], including [[https://clemson.libcal.com/event/7336551]["Zotero for Citation Management"]].
  - Now as I think about it: JabRef-based system might be better as it would
    have fewer moving parts, but as of now it seems not worth the hassle of
    setting everything up again...
* References :ignore:
  bibliographystyle:unsrt
  bibliography:/home/bochkarev/Dropbox/bibliography/references.bib

* Footnotes

[fn:org] Speaking about orgmode: you can check out this great Bernt Hansen's
      page to see what's possible. But despite I like this technology *a lot*, I
      must admit it is still a DIY type of thing, to my taste

[fn:MIT] From what I understand, it is actually free -- MIT-licensed.

[fn:evernote] which I do not like as it is too much cloud-based and not, um...
    hacker friendly, to my feelings. For example, I do not quite understand how
    to export my stuff quickly and without losses, should I happen to need this...

[fn:layers] I use layers: =bibtex, pdf=, and =org-roam= + =org-roam-bibtex=
along with =helm= and such (a mandatory link to my [[https://github.com/alex-bochkarev/my-spacemacs-dotfiles][dotfiles]]). If
you are into Emacs world, you might find it useful to watch this EmacsConf2020
[[https://emacsconf.org/2020/talks/17/][talk]] by [[https://noorahalhasan.com/][Noorah Alhasan]], which discusses a very similar approach.

[fn:recursive] Needless to say, this citation was inserted here using
Zotero in under 1 minute (and I have a downloaded PDF as a by-product).

[fn:PIM] Which is by the way a part of something that is usually called Personal
Information Management ([[https://en.wikipedia.org/wiki/Personal_information_management][PIM]]) or Personal Knowledge Management ([[https://en.wikipedia.org/wiki/Personal_knowledge_management][PKM]]) systems.
These two do not seem well-defined concepts, in my opinion, but do have something to do
with very important topics, especially for a researcher.

[fn:hum] This is in Sociology -- but I believe the benefits should translate
well to STEM, at least to some extent.
